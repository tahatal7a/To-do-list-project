<Window x:Class="DesktopHelper.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:DesktopHelper.ViewModels"
        Title="Desktop Task Aid"
        Height="600" Width="800"
        Background="#F0F0F0"
        MinHeight="700" MinWidth="650"
        WindowStartupLocation="CenterScreen">

    <!-- Setting the DataContext to the MainViewModel for data binding -->
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Grid>
        <!-- The main row structure -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- TOP ROW -->
        <Grid Grid.Row="0" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- TabControl for different tabs -->
            <TabControl Grid.Column="0" Margin="0,0,10,0">
                <TabItem Header="Reminders">
                    <!-- Expander can show or hide feature options -->
                    <Expander Header="Features" IsExpanded="False" Margin="10">
                        <StackPanel>
                            <!-- CheckBoxes for toggling feature states -->
                            <CheckBox Content="Pull Mouse" Margin="5" FontSize="14"/>
                            <CheckBox Content="Drag Window" Margin="5" FontSize="14"/>
                        </StackPanel>
                    </Expander>
                </TabItem>
                <TabItem Header="Import Cal">
                    <StackPanel Margin="10">
                        <TextBlock Text=""  />
                    </StackPanel>
                </TabItem>
            </TabControl>

            <!-- GroupBox for the Focus Timer section -->
            <GroupBox Header="Focus Timer" Grid.Column="1" HorizontalAlignment="Center"
                      BorderBrush="#DDDDDD" BorderThickness="1" Padding="10"
                      MinWidth="350" MaxWidth="400" MinHeight="160">
                <!-- Border inside the GroupBox for visual separation -->
                <Border Background="#FFFFFF" BorderBrush="#DDDDDD" BorderThickness="1"
                        CornerRadius="5" Padding="15">
                    <StackPanel>
                        <!-- Binding the timer text to a ViewModel  -->
                        <TextBlock Text="{Binding TimerDisplay}" FontSize="48" FontWeight="Bold" Foreground="Black"
                                   HorizontalAlignment="Center" Margin="0,10"/>
                        <!-- Buttons to start, reset, or configure the timer -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                            <Button Content="{Binding StartButtonText}" Command="{Binding StartTimerCommand}"
                                    Background="Black" Foreground="White" FontWeight="Bold"
                                    Width="80" Height="35" Margin="5"/>
                            <Button Content="{Binding ResetButtonText}" Command="{Binding ResetTimerCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    Width="80" Height="35"/>
                            <Button Content="{Binding SettingsButtonText}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    Width="80" Height="35"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </GroupBox>

            <!-- Toggle switch in the top-right -->
            <ToggleButton Grid.Column="2"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Right"
                          Margin="10"
                          IsChecked="{Binding IsHelperEnabled, Mode=TwoWay}"
                          Style="{StaticResource ToggleSwitchStyle}"/>
        </Grid>

        <!-- MIDDLE ROW (TASK LIST + ADD BUTTON) -->
        <Grid Grid.Row="1" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- DataGrid to display tasks -->
            <DataGrid x:Name="TaskListGrid"
                      Grid.Row="0"
                      HorizontalAlignment="Stretch"
                      Margin="30,0,30,5"
                      ItemsSource="{Binding Tasks}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      IsReadOnly="False"
                      CellEditEnding="TaskListGrid_CellEditEnding"
                      Height="120"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                <DataGrid.Columns>
                    <!-- Column for the task name -->
                    <DataGridTextColumn Header="Task" Width="*" Binding="{Binding TaskName, Mode=TwoWay}"/>
                    <!-- Column for the due date -->
                    <DataGridTemplateColumn Header="Due Date" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DueDate, StringFormat=d}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <!-- Allow selecting a date in edit mode -->
                                <DatePicker SelectedDate="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <!-- Checkbox column to determine if reminders are active -->
                    <DataGridCheckBoxColumn Header="Reminders?" Width="80" Binding="{Binding HasReminder, Mode=TwoWay}"/>
                    <!-- Actions column with Edit and Delete buttons -->
                    <DataGridTemplateColumn Header="Actions" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <!-- Edit button -->
                                    <Button Content="Edit" Style="{StaticResource EditButtonStyle}"/>
                                    <!-- Delete button, using the DeleteTaskCommand from the view model -->
                                    <Button Style="{StaticResource DeleteButtonStyle}" Width="30" Height="30"
                                            Command="{Binding DataContext.DeleteTaskCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}">
                                        <TextBlock FontFamily="Segoe MDL2 Assets"
                                                   Text="&#xE74D;"
                                                   FontSize="14"
                                                   Foreground="White"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Button to add a new task -->
            <StackPanel Grid.Row="2" HorizontalAlignment="Center" Margin="0,10,0,10">
                <Button Content="{Binding AddButtonText}" Style="{StaticResource PrimaryButtonStyle}" Width="80" Height="35"
                        Command="{Binding AddTaskCommand}"/>
            </StackPanel>
        </Grid>

        <!-- BOTTOM ROW (CALENDAR IMPORT) -->
        <Grid Grid.Row="2" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Border to visually separate the calendar import section -->
            <Border Grid.Column="0" Background="White" CornerRadius="5" Padding="10"
                    Margin="0,0,10,0" BorderBrush="#DDDDDD" BorderThickness="1">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <!-- Icon for the Import Calendar section -->
                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE787;" FontSize="16"
                                   FontWeight="Bold" Foreground="Black" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <TextBlock Text="Import Calendar" FontWeight="Bold" FontSize="16" VerticalAlignment="Center"/>
                    </StackPanel>
                    <Calendar />
                </StackPanel>
            </Border>

            <!-- Import calendar actions -->
            <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Top" Margin="0,0,0,10">
                <Button Content="{Binding ImportButtonText}" Style="{StaticResource PrimaryButtonStyle}" Width="180" Height="35"
                        Command="{Binding ImportCalendarCommand}" IsEnabled="{Binding IsImportButtonEnabled}"/>
                <TextBlock Text="{Binding ImportStatusMessage}" Margin="0,10,0,0" TextWrapping="Wrap" Foreground="Gray"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
